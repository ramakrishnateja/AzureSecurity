apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: airflow-worker
  namespace: airflow
  labels:
    app: airflow-worker
spec:
  replicas: 2
  serviceName: airflow-worker
  selector:
    matchLabels:
      app: airflow-worker
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: airflow-worker
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: worker
        args:
        - worker
        image: {{.Cluster.Spec.Worker.Image}}:{{.Cluster.Spec.Worker.Version}}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8793
          name: wlog
        volumeMounts:
        - mountPath: /usr/local/airflow/dags/
          name: dags-data
      volumes:
      - emptyDir: {}
        name: dags-data

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: airflow-ui
  namespace: airflow
  labels:
    app: airflow-ui
spec:
  replicas: 2
  selector:
    matchLabels:
      app: airflow-ui
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: airflow-ui
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: airflow-ui
        args:
        - webserver
        image: {{.Cluster.Spec.UI.Image}}:{{.Cluster.Spec.UI.Version}}
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: web
            scheme: HTTP
          initialDelaySeconds: 100
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 2
        ports:
        - containerPort: 8080
          name: web
          protocol: TCP
        volumeMounts:
        - mountPath: /usr/local/airflow/dags/
          name: dags-data
      volumes:
      - emptyDir: {}
        name: dags-data

---

